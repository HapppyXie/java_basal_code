 对已检查异常的处理
 * 1.方法声明抛出异常，jdk提供的一些类的方法声明使用关键字throws来声明可能产生那些异常
 * 					修饰符 返回值类型 方法名 （形参）throws异常类{
 * 							方法体；
 * 					}
 * 					例如：File类中的createNewFile()方法
 * 						当调用createNewFile()方法时必须对其进行处理
 *
 * 2.处理异常的方式： 1.加上throws 继续抛出异常   调用方法继续使用throws关键字抛出异常
 * 			示例：创建文件抛出异常
 * 			注意：java予许以该种方式处理异常，最终抛给虚拟机处理，虚拟机发现异常后会终止程序运行
 * 				实际应用中也会使用这种方式，通常是向上抛到某一执行层统一处理
 * 				班长-辅导员-学生科-学生处
 *
 * 				2.try-catch处理	：在当下场景直接处理
 * 							 一般形式：try{要监控错误的代码块}catch(异常类型){异常处理程序}  try+Alt+/快捷
 * 				 			特征:处理异常后，不影响程序其他部分的运行
 * 							    当有多个异常捕获时，需写多个catch 其中一个捕获异常后，后面的其他catch不再进行捕获
 * 								捕获多个异常时，异常父类放在后面
 *
 * try-catch:try执行可能畅神异常的代码，catch捕获并处理
 * finally:无论语句是否发生异常，最后都会被执行
 * try-catch-finally:1.try后必须有catch或finally
 * 					 2.即使try或catch中使用了return，finally都要执行
 * 					 3.finally不执行的唯一情况，被安全保护的代码块中执行了System.exit(0);
 * 					 4.捕获异常后不影响其他程序执行
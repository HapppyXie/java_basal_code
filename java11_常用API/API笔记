Java API:JDK提供给开发人员辅助程序开发的类及其包含的方法
	导包嘛！
	API:application programming interface(一些预先定义的函数，什么的)
主要学习：1.常用API及其提供的常用功能
	    2.学会查看API文档：
打开API文档-从索引输入类名查看-（1.类信息 2.字段摘要 3.构造方法 4.方法摘要（成员方法））

(1)日期类
Date	
LocalDate


(2)String
常用类：String		支持索引
	  StringBuilder
      StringBuffer

String的两种创建：String s = "s"; 		
			   String s = new String("s");  

1.直接双引号创建一个常量，会先在堆内存的常量池里找：(1)有就复制常量池的堆内存地址给栈内存，
							 		   (2)没有就在常量池中创建一个堆内存地址给栈内存
							 		   
String 类型的常量池比较特殊，它的主要使用方法有两种: 直接""双引号生成的，或者是string.intern() 的对象都是在常量池中

2.使用new在堆内存的常量池内和常量池外都开辟，但直接存储的是常量池外的地址;内存中予许有相同的内容，但地址不同
  (所以new一个字符串对象，可能创建1到2个对象(地址))

3.通过字符串+字符串得到的，是在堆中创建（常量池外）

equals和==的区别:
	1.equals是Object顶层父类的方法，每个类都可重写改方法，没有重写等价于==
	2.==比较值，对基本数据类型比较值，
			  对引用类型比较内存地址（即判断两个引用是否都指向一个对象，实质仍比较值，引用类型的值是内存地址）
	3.equals：逐个字符进行比较。故，比较字符串时用equals方法
	   注意空指针异常：1.用常量比较变量（不会为null的放前，可能为null的对象放后）
				   2.如果两个都可能为null，用工具类的Objects的equals比较
				 
		其他注意:	  equals无法比较基本数据类型
				  String，包装类类本身重写了equals方法，
				  不同类型的equals方法被重写，相互用equals比较，值相同，结果不相同						
	
	4.Java只有值传递，没有引用传递：
	  JVM中划分了好几块内存区域，创建的所有对象都存放在堆中，基本数据类型和局部变量存放在栈中
	  
      
      
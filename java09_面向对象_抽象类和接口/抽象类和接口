/*抽象类（abstract）当某个方法不能给出具体实现时，需要对该方法添加abstract标志
	 *               当类中有abstract方法时，该类必须是abstract类
	 *
	 *接口（interface）:当一个类所有的方法都是抽象方法时，该类可转成接口
	 *
	 *认识抽象类
	 *   例子： Animal,Lion,Fish,TsetAniaml
	 * 抽象类的作用： 仅供子类继承并实现抽象方法 做项目的顶层设计
	 * 
	 * 抽象类的特征： 有抽象方法的类一定是抽象类
	 *            抽象类可以没有抽象方法
	 *            抽象类不能实例化（new对象） 不能修改抽象类里面的信息 顶层设计不要随意改动
	 * 			  如果子类没有实现抽象方法，则子类也要设置为抽象类

 认识接口： 
 * 接口特征：所有方法都是抽象的
 * 		  方法默认是public abstract类型   抽象方法只能供子类实现
 * 									  子类必须能够访问到
 *  	  属性默认是public static final类型   define PI 3.14
 * 
 * 
 *对接口的进一步讨论： 解决Java类单一继承问题：接口可以多继承(继承多个父类接口，组合)  例子：phone接口设计 Phone-Earphone-Usb,Huawei，Vivo实现  
 *				 多态的另一种体现：重写Override：子类和父类的实现不同
 *							  重载Overload：一个类中同名方法的不同实现
 *							  接口：不同的实现类有不同的实现方法
 *				 可通过接口实现解耦： 上转型思想：子类对象可以赋给父类对象
 *								          父类类型可以接受不同的子类对象
 *								 接口可以接受所有实现类
 *								 示例代码： 灯接口Light
 *										 红灯RedLight实现light
 * 										 绿灯GreenLight实现Light
 * 										 灯控制器类LightControl
 * 										 测试类TestLight
 * 
 
 